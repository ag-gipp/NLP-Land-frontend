name: Release
on:
  pull_request:
    branches:
      - main
    types: [closed]
    
jobs:

  Release:
    runs-on: ubuntu-latest
    steps:
      - name: 🏁 Checkout
        uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: '0'

      - name: ✅ Setup node
        uses: actions/setup-node@v2
        with:
          node-version: '18'

      - name: 🏷 Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: ⬆️ Update npm package version
        uses: reedyuk/npm-version@1.1.1
        with:
          version: ${{steps.tagging.outputs.tag}}

      - name: ➕ Commit files
        run: |
          git config --local user.email "jan.philip.wahle@gmail.com"
          git config --local user.name "github-actions[bot]"
          git add package.json
          git commit -m "[release-bot] Update npm version"
      - name: 💨 Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.ACCESS_TOKEN }}
          branch: ${{ github.ref }}

      - name: 🐳 Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: 🐳 Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: 🔑 Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 🐳 Build and push version
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: jpelhaw/nlp-land-frontend:${{steps.tagging.outputs.tag}}

      - name: 🐳 Build and push latest
        uses: docker/build-push-action@v2
        with:
          context: .
          push: true
          tags: jpelhaw/nlp-land-frontend:latest

      - name: 🔨 Create Release
        uses: ncipollo/release-action@v1.10.0
        with:
          generateReleaseNotes: true
          draft: true
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.tag_version.outputs.new_tag }}
          name: Release ${{ steps.tag_version.outputs.new_tag }}
          body: ${{ steps.tag_version.outputs.changelog }}

      - name: 🔑 Docker GitHub package login
        run: docker login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}

      - name: 🐳 Build docker image
        run: docker build -t ghcr.io/gipplab/cs-insights-frontend:${{steps.tagging.outputs.tag}} -t ghcr.io/gipplab/cs-insights-frontend:latest .

      - name: 📦 Push docker image
        run: |
          docker push ghcr.io/gipplab/cs-insights-frontend:${{steps.tagging.outputs.tag}}
          docker push ghcr.io/gipplab/cs-insights-frontend:latest
